---
name: vue-3-ci-cd

on:
  push:
    branches-ignore:
      - main
    paths-ignore:
      - 'wiki/**'

permissions:
  contents: read # The workflow is read only

# Ensures that only one workflow per branch/environment will be run
concurrency:
  group: ${{ github.head_ref || github.ref_name }} 
  cancel-in-progress: true

jobs:

  linter:
    # Name the Job
    name: Lint
    # Set the agent to run on
    runs-on: ubuntu-latest
    ############################################
    # Grant status permission for MULTI_STATUS #
    ############################################
    permissions:
        contents: read
        packages: read
        statuses: write
    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
        - name: Checkout Code
          uses: actions/checkout@v4
          with:
              # Full git history is needed to get a proper
              # list of changed files within `super-linter`
              fetch-depth: 0
          ################################
          # Run Linter against code base #
          ################################
        - name: Lint Code Base
          uses: super-linter/super-linter@v5
          env:
            DEFAULT_BRANCH: main
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            FILTER_REGEX_INCLUDE: .*src/.*
            LOG_LEVEL: WARN
        
  run_project:
    runs-on: ubuntu-22.04
    needs: linter
    timeout-minutes: 30 #job times out after 30 mins

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Change this to the desired Node.js version

    # Cache dependencies for faster workflow
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build # Change this to your build command

      - name: Run Tests
        run: | 
          npm run test:unit

      - name: Retrieve unit test coverage
        run: |
          npm run test:coverage
          COVERAGE_VAR=$(jq -r '.total.lines.pct' < coverage/coverage-summary.json)
          if [[ $COVERAGE_VAR -lt 80 ]]; then  # Adjust threshold as needed
            echo "::warning::Coverage below threshold (${COVERAGE_VAR}). \
            Please improve test coverage." >> $GITHUB_STEP_SUMMARY 
          else
            echo "$COVERAGE_VAR % line coverage"
          fi
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
