# Node.js with Vue
# Build a Node.js project that uses Vue.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    exclude:
    - main
  paths:
    exclude:
    - docs/*

pool:
  vmImage: 'ubuntu-22.04'

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

stages:
- stage: BuildLintUnitTest
  jobs:
  - job: RunProject
    displayName: 'Build, Lint, Unit-test project'
    timeoutInMinutes: 10
    steps:
    - checkout: self

    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - task: Cache@2
      inputs:
        key: 'npm | "$(Agent.OS)" | package-lock.json'
        path: $(npm_config_cache)
        restoreKeys: |
          npm | "$(Agent.OS)"
      displayName: Cache npm

    - script: npm ci
      displayName: 'Install dependencies'

    - script: npm run lint
      displayName: 'Linting'

    - script: npm run build
      displayName: 'Build'

    - script: npm run test:unit
      displayName: 'Run Tests'

    - script: |
        npm run test:coverage
        COVERAGE_VAR=$(jq -r '.total.lines.pct' < coverage/coverage-summary.json)
        if [ $COVERAGE_VAR -lt 80 ]; then
          echo "Coverage below threshold ($COVERAGE_VAR). Please improve test coverage."
        else
          echo "Coverage: $COVERAGE_VAR%"
        fi
      displayName: 'Retrieve unit test coverage'

- stage: E2E
  condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - job: RunE2ETests
    displayName: 'Run E2E tests'
    timeoutInMinutes: 10
    steps:
    - checkout: self

    - task: NodeTool@0
      inputs:
        versionSpec: '18'

    - task: Cache@2
      inputs:
        key: 'npm | "$(Agent.OS)" | package-lock.json'
        path: '$(Pipeline.Workspace)/.npm'
        restoreKeys: |
          npm | "$(Agent.OS)"

    - script: |
        npm install -D @playwright/test@latest
        npm ci
      displayName: 'Install dependencies'

    - script: npm run build
      displayName: 'Build'

    - script: npx playwright install --with-deps
      displayName: 'Install Playwright Browsers'

    - script: npx playwright test
      displayName: 'Run Playwright tests'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'playwright-report/'
        ArtifactName: 'playwright-report'
        publishLocation: 'Container'
